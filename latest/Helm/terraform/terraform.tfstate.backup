{
  "version": 4,
  "terraform_version": "1.9.2",
  "serial": 389,
  "lineage": "9aa006ce-9ea8-2100-bf82-222f529318b6",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": true
              }
            ],
            "arn": "arn:aws:eks:us-east-1:767397950016:cluster/cluster-dev",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJVkFlWmR6TkdnSXd3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeU1UY3dPVE0xTlRKYUZ3MHpOREV5TVRVd09UUXdOVEphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNZN1pBQXhXdm9naFIwV3Y4b1c3TGNUTjF6TGQrK2Ira1dGbUJBaWd4TUExTUpUYWF1QzF2Qk1BUzEKRWdIYUhveGdSaDRmQmV2N1k4QjhxcCtIMlUyWVhYUmZjSWNqcC8zVVh0dU1vdDZQM2xSakx5dFN1d2l1L0h6RgpvamV1ZWcrb0w0bFJmVUl0MVJ2emxERW5sak85RXFoQ3NXeUJRL1M2QmRzY3FURlhyNmRSNm95d3d1MGVJUEtYCi9jYzNMbkNqNUpIYWNicFJCcGRDVXp0MDFXWlhQdTc1RGwzSEFqUmlXL2grWXZyNlJlZi9JNzlBQ1MzWmcwTUgKV29yb0VJN1JvQ01NTkYwb1VZRzJPRVNHK0x2eENmR0tsNFJUWjg4Mi9EZ2lxQUFXc1Z3WTEzdE8xUkpaczRISgpTRFM3UzMzZzRxVm9Yc2xQSzRBeDRXY3FnS0dMQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRZXdMQ0NBa0kzSjJhUDBCNXVnc2xTV2xlSE1qQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmNhdTlzWFlCUwp6RTlYR25jUEFDVzJWUjM5a2JNZHYzR1NuZU96Y1dnUDIxMkZJa1JBWCtFL0hBNEZDamhQQ201S3dkTlc4TWFDCmhpVGRJRXR6clVCZHVkYzRJS0FGOFkvdlBSak9oY2R2enFMNVNGNlB6OWtaVVBrZ0lrNHJQS20zVkFOc0JwRTcKS25HK1R3a29JM1VpT0Y4a1VqNlNISUgrNStFangzOEt1UzhVaE1IRjd6Rjc2bXRFOWllQkN4TUNZRjkwVlZxYQppR1ZpbXU0Z2VxdVVlK3EwdS9GYm8ySzlBS1BNaUdRQ2RqWHBNZGptTTArb2R2QUxVc2J5NGtoWVMrcTVGTnd1CjNKMy9XUW9lSGFEcEM5ZlNrMmtXNkEzaTZ4ekpZSjdGQzlFeFpwY1JYVUtjU2dzc0tvdEs3YU9tQVo2Q1l2V1gKY1FWQmdxMlUzUUROCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "compute_config": [],
            "created_at": "2024-12-17T09:36:10Z",
            "enabled_cluster_log_types": [],
            "endpoint": "https://48F1125BCC8DD3418816A72EE059E51F.gr7.us-east-1.eks.amazonaws.com",
            "id": "cluster-dev",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/48F1125BCC8DD3418816A72EE059E51F"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "elastic_load_balancing": [
                  {
                    "enabled": false
                  }
                ],
                "ip_family": "ipv4",
                "service_ipv4_cidr": "10.100.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "cluster-dev",
            "outpost_config": [],
            "platform_version": "eks.23",
            "remote_network_config": [],
            "role_arn": "arn:aws:iam::767397950016:role/eksctl-cluster-dev-cluster-ServiceRole-Wa1VhVgUGzdi",
            "status": "ACTIVE",
            "storage_config": [],
            "tags": {
              "Name": "eksctl-cluster-dev-cluster/ControlPlane",
              "alpha.eksctl.io/cluster-name": "cluster-dev",
              "alpha.eksctl.io/cluster-oidc-enabled": "false",
              "alpha.eksctl.io/eksctl-version": "0.194.0",
              "eksctl.cluster.k8s.io/v1alpha1/cluster-name": "cluster-dev"
            },
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.30",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0330f0358340fdc40",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-08c11b725c4ee281f"
                ],
                "subnet_ids": [
                  "subnet-0263fc1b38b8bed6b",
                  "subnet-077f3f4bb536bcfc6",
                  "subnet-08d97ae98b48b148b",
                  "subnet-0b951b1402366329e"
                ],
                "vpc_id": "vpc-04ffe65ba66d3a231"
              }
            ],
            "zonal_shift_config": []
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cluster-dev",
            "name": "cluster-dev",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBM0ZMRDNPSkFNVFdDSjdYQiUyRjIwMjQxMjE4JTJGdXMtZWFzdC0xJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDEyMThUMTAyMTQ4WiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT1iYmJmZTU0MjE2MjM3OGJiMmY1NDRmMmMzY2Y1NjQyOGRmYzg2ZWM3NDZkMGNmMmVjZWI0MDY4ZmY2OGI0MjFi"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "go_app",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "../go-app/",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "go-app",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.16.0",
                "chart": "go-app",
                "first_deployed": 1734510695,
                "last_deployed": 1734517315,
                "name": "go-app",
                "namespace": "vault",
                "notes": "1. Get the application URL by running these commands:\n     NOTE: It may take a few minutes for the LoadBalancer IP to be available.\n           You can watch its status by running 'kubectl get --namespace vault svc -w go-app'\n  export SERVICE_IP=$(kubectl get svc --namespace vault go-app --template \"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}\")\n  echo http://$SERVICE_IP:8080\n",
                "revision": 12,
                "values": "{\"ServiceAccountName\":\"vault-sa\",\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":100,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"env\":[{\"name\":\"VAULT_ADDR\",\"value\":\"https://34.203.226.62:8202/\"},{\"name\":\"VAULT_ROLE\",\"value\":\"vault-role\"},{\"name\":\"VAULT_SECRET_PATH\",\"value\":\"/vault/secrets/app.txt\"}],\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"Always\",\"repository\":\"mahi2029/go-vault-client-image\",\"tag\":\"v1\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":\"http\"}},\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{\"vault.hashicorp.com/agent-inject\":\"true\",\"vault.hashicorp.com/agent-inject-secret-app.txt\":\"kv-v2/fakeapp/mysecret\",\"vault.hashicorp.com/role\":\"vault-role\",\"vault.hashicorp.com/tls-skip-verify\":\"true\"},\"podLabels\":{},\"podSecurityContext\":{},\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":\"http\"}},\"replicaCount\":1,\"resources\":{},\"securityContext\":{},\"service\":{\"port\":8080,\"targetPort\":8080,\"type\":\"LoadBalancer\"},\"serviceAccount\":{\"annotations\":{},\"automount\":true,\"create\":true,\"name\":\"go-app\"},\"tolerations\":[],\"volumeMounts\":[],\"volumes\":[]}",
                "version": "0.1.0"
              }
            ],
            "name": "go-app",
            "namespace": "vault",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "service.port",
                "type": "",
                "value": "8080"
              },
              {
                "name": "service.type",
                "type": "",
                "value": "LoadBalancer"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# Default values for go-app.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/\nreplicaCount: 1\n\n# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/\nimage:\n  repository: mahi2029/go-vault-client-image\n  # This sets the pull policy for .\n  #pullPolicy: IfNotPresent\n  pullPolicy: Always\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: \"v1\"\n\n# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\nimagePullSecrets: []\n# This is to override the chart name.\nnameOverride: \"\"\nfullnameOverride: \"\"\n\n#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Automatically mount a ServiceAccount's API credentials?\n  automount: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"go-app\"\n\n# This is for setting Kubernetes Annotations to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\n\n# This is for setting Kubernetes Labels to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\npodLabels: {}\n\npodSecurityContext:\n  {}\n  # fsGroup: 2000\n\nsecurityContext:\n  {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\n# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/\nservice:\n  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n  type: LoadBalancer\n  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports\n  port: 80\n  targetPort: 8080\n\n# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/\ningress:\n  enabled: false\n  className: \"\"\n  annotations:\n    {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: chart-example.local\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources:\n  {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\n# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\nlivenessProbe:\n  httpGet:\n    path: /\n    port: http\nreadinessProbe:\n  httpGet:\n    path: /\n    port: http\n\n#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\n# Additional volumes on the output Deployment definition.\nvolumes: []\n# - name: foo\n#   secret:\n#     secretName: mysecret\n#     optional: false\n\n# Additional volumeMounts on the output Deployment definition.\nvolumeMounts: []\n# - name: foo\n#   mountPath: \"/etc/foo\"\n#   readOnly: true\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\nenv:\n  - name: VAULT_ADDR\n    value: \"https://34.203.226.62:8202/\"\n  - name: VAULT_ROLE\n    value: \"vault-role\"\n\n  - name: VAULT_SECRET_PATH\n    value: \"/vault/secrets/app.txt\"\nServiceAccountName: \"vault-sa\"\n\npodAnnotations:\n  vault.hashicorp.com/tls-skip-verify: \"true\"\n  vault.hashicorp.com/agent-inject: \"true\"\n  vault.hashicorp.com/role: \"vault-role\"\n  vault.hashicorp.com/agent-inject-secret-app.txt: \"kv-v2/fakeapp/mysecret\"\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "vault",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "vault",
                "resource_version": "228793",
                "uid": "b09f284b-1428-4d25-9b6a-cd0f3eb6b3a4"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
