{
  "version": 4,
  "terraform_version": "1.9.2",
  "serial": 71,
  "lineage": "3113520d-b49d-fbe3-4af8-372299d8aee5",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": true
              }
            ],
            "arn": "arn:aws:eks:us-east-1:767397950016:cluster/cluster-dev-2",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRTdhc0x0UDUwVWt3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeU1qQXdOVEl3TkROYUZ3MHpOREV5TVRnd05USTFORE5hTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURNeUxWZWd5Q2UwNWgzSWJ4N2FkSjNPRmpDaFlhUUV6WU40ZnRGZlFNRFltcnhQVE9vWSt3L0hleTIKUUhCdzVYbVFYMTN5L0ZOb3V6M2M3MTNVKytWS1doemZoVmhuSTlJOEJOVHZ5QnRmNmZUcW1XRnJJZTVpeXJaaQp2ZWFZZGNxcHlCLytKcENGWWV1amlVVnNNWW1iMzJOT1JzdTFicGptcS91dkZaVUwrODAzY1dWNWFqRzFtblBSCnV4VW80KzBWVDFPMUNmWWwwU2dtV3ZTOE9QMlFOM2xaWDVDbWNnTG8xeEpOWE5JanFnTDAzUkNobnVVZ0pBY2MKSDJDNUgyaGIyRXVPVTlQUlVkTmtWNWlnQWNUUjhnMmlYWjVTaTQxQlBnYURDaVEzODVPT0EycFZzN3FQaUM0KworMldIL1pXV1YrdXpBbEk5ZzBRVDEyUGRkSDlUQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRYys3cVJMbjhJeUs5c0hnKzFZUStWd0tENGNqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnBwYnM5RkZmQgprVlhpU3R6RW5QOE55MndFbUdrNG5HemtCMXR3NGRtUzVndFArb1pNM3IxUkh0TnlLQ1B5MUtvVURNaWJDRVZBCjJvd2tTZERFcXZGQ2NXM0lWSTNaOFBPMEhjUVhjMVFZMTV3RzhBdVFaOEdNcEhwa0dOUFVMRytOc1ZCMEFJbUEKQ09TNnB0ZDdlc3JIUDVkNnJiQ294cHZRejZNcUlZbFNQaVQ2ZiszR2ZEY3A1T3NwN2taRDZ0T3VzRHJSVERHMQpkeExjMFk1bXJyekN1UEpjSFp3R0hqeUpyV1ZYQ2JER3lmZCthMXJJVVJQbmIweHhpbk9hb2pGQXRYYk05V0M0Ck1EZXluSUFBRUFMdlpvYUJKaUczOHdHa3dpTUtob0JONk0zMUtpdGo3SWZycU5YdVJHWWUrUG4weFVrby9CYUEKVm9RNnI3OUVwanBrCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "compute_config": [],
            "created_at": "2024-12-20T05:20:47Z",
            "enabled_cluster_log_types": [],
            "endpoint": "https://EB5BE975ABA7F0EAD4B41F7CBD2B7DBE.gr7.us-east-1.eks.amazonaws.com",
            "id": "cluster-dev-2",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/EB5BE975ABA7F0EAD4B41F7CBD2B7DBE"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "elastic_load_balancing": [
                  {
                    "enabled": false
                  }
                ],
                "ip_family": "ipv4",
                "service_ipv4_cidr": "10.100.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "cluster-dev-2",
            "outpost_config": [],
            "platform_version": "eks.23",
            "remote_network_config": [],
            "role_arn": "arn:aws:iam::767397950016:role/eksctl-cluster-dev-2-cluster-ServiceRole-BX2qDCBjl2rf",
            "status": "ACTIVE",
            "storage_config": [],
            "tags": {
              "Name": "eksctl-cluster-dev-2-cluster/ControlPlane",
              "alpha.eksctl.io/cluster-name": "cluster-dev-2",
              "alpha.eksctl.io/cluster-oidc-enabled": "false",
              "alpha.eksctl.io/eksctl-version": "0.194.0",
              "eksctl.cluster.k8s.io/v1alpha1/cluster-name": "cluster-dev-2"
            },
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.30",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-06c0431f244118dbe",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-04b20c1437b72c544"
                ],
                "subnet_ids": [
                  "subnet-01778276929e3a382",
                  "subnet-02247f1dbd2d8f467",
                  "subnet-075624b08ed2fbad0",
                  "subnet-0cb3d35060b9e7184"
                ],
                "vpc_id": "vpc-04393a6c08e5c52e8"
              }
            ],
            "zonal_shift_config": []
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cluster-dev-2",
            "name": "cluster-dev-2",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBM0ZMRDNPSkFNVFdDSjdYQiUyRjIwMjQxMjIwJTJGdXMtZWFzdC0xJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDEyMjBUMTAzNTIwWiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT02NWVkYzM1ZTRhMmQ0YWFlNDkxMWNmYzYwYTgwYzdjYjgzNjhhM2M4MGNkZjZjMDViMTk1NDg1YzYwZjE2NjEw"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubernetes_secret",
      "name": "sa_token",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": null,
            "id": "vault/vault-sa-token",
            "immutable": null,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "vault-sa-token",
                "namespace": "vault",
                "resource_version": "",
                "uid": ""
              }
            ],
            "type": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubernetes_service_account",
      "name": "existing",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": false,
            "default_secret_name": "",
            "id": "vault/vault",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {
                  "meta.helm.sh/release-name": "vault",
                  "meta.helm.sh/release-namespace": "vault"
                },
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/instance": "vault",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "vault",
                  "helm.sh/chart": "vault-0.29.1"
                },
                "name": "vault",
                "namespace": "vault",
                "resource_version": "48988",
                "uid": "acef4c37-d780-4e4e-b2ec-de988fb1befa"
              }
            ],
            "secret": []
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "go_app",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "status": "tainted",
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "../go-app/",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "go-app",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.16.0",
                "chart": "go-app",
                "first_deployed": 1734690969,
                "last_deployed": 1734690969,
                "name": "go-app",
                "namespace": "vault",
                "notes": "1. Get the application URL by running these commands:\n     NOTE: It may take a few minutes for the LoadBalancer IP to be available.\n           You can watch its status by running 'kubectl get --namespace vault svc -w go-app'\n  export SERVICE_IP=$(kubectl get svc --namespace vault go-app --template \"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}\")\n  echo http://$SERVICE_IP:8080\n",
                "revision": 1,
                "values": "{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":100,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"env\":[{\"name\":\"VAULT_ADDR\",\"value\":\"https://34.203.204.99:8202/\"},{\"name\":\"VAULT_ROLE\",\"value\":\"vault-role\"}],\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"mahi2029/go-vault-client-image\",\"tag\":\"v5\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":\"http\"}},\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{},\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":\"http\"}},\"replicaCount\":1,\"resources\":{},\"securityContext\":{},\"service\":{\"port\":8080,\"targetPort\":8080,\"type\":\"LoadBalancer\"},\"serviceAccount\":{\"annotations\":{},\"automount\":true,\"create\":true,\"name\":\"go-app\"},\"tolerations\":[],\"volumeMounts\":[],\"volumes\":[]}",
                "version": "0.1.0"
              }
            ],
            "name": "go-app",
            "namespace": "vault",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "service.port",
                "type": "",
                "value": "8080"
              },
              {
                "name": "service.type",
                "type": "",
                "value": "LoadBalancer"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "failed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# Default values for go-app.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/\nreplicaCount: 1\n\n# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/\nimage:\n  repository: mahi2029/go-vault-client-image\n  # This sets the pull policy for images.\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: \"v5\"\n\n# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\nimagePullSecrets: []\n# This is to override the chart name.\nnameOverride: \"\"\nfullnameOverride: \"\"\n\n#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Automatically mount a ServiceAccount's API credentials?\n  automount: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"go-app\"\n\n# This is for setting Kubernetes Annotations to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\npodAnnotations: {}\n# This is for setting Kubernetes Labels to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\npodLabels: {}\n\npodSecurityContext:\n  {}\n  # fsGroup: 2000\n\nsecurityContext:\n  {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\n# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/\nservice:\n  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n  type: LoadBalancer\n  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports\n  port: 80\n  targetPort: 8080\n\n# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/\ningress:\n  enabled: false\n  className: \"\"\n  annotations:\n    {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: chart-example.local\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources:\n  {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\n# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\nlivenessProbe:\n  httpGet:\n    path: /\n    port: http\nreadinessProbe:\n  httpGet:\n    path: /\n    port: http\n\n#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\n# Additional volumes on the output Deployment definition.\nvolumes: []\n# - name: foo\n#   secret:\n#     secretName: mysecret\n#     optional: false\n\n# Additional volumeMounts on the output Deployment definition.\nvolumeMounts: []\n# - name: foo\n#   mountPath: \"/etc/foo\"\n#   readOnly: true\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\nenv:\n  - name: VAULT_ADDR\n    value: \"https://34.203.204.99:8202/\"\n  - name: VAULT_ROLE\n    value: \"vault-role\"\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "kubernetes_namespace.vault"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "vault",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "vault",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.18.1",
                "chart": "vault",
                "first_deployed": 1734690552,
                "last_deployed": 1734690552,
                "name": "vault",
                "namespace": "vault",
                "notes": "\nThank you for installing HashiCorp Vault!\n\nNow that you have deployed Vault, you should look over the docs on using\nVault with Kubernetes available here:\n\nhttps://developer.hashicorp.com/vault/docs\n\n\nYour release is named vault. To learn more about the release, try:\n\n  $ helm status vault\n  $ helm get manifest vault\n\n",
                "revision": 1,
                "values": "{\"global\":{\"enabled\":true,\"externalVaultAddr\":\"https://34.203.204.99:8202/\",\"namespace\":\"vault\"},\"injector\":{\"agentDefaults\":{\"cpuLimit\":\"500m\",\"cpuRequest\":\"250m\",\"memLimit\":\"128Mi\",\"memRequest\":\"64Mi\"},\"agentImage\":{\"repository\":\"hashicorp/vault\",\"tag\":\"1.18.1\"},\"authPath\":\"auth/kubernetes\",\"certs\":{\"caBundle\":\"\",\"certName\":\"tls.crt\",\"keyName\":\"tls.key\",\"secretName\":null},\"enabled\":\"true\",\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"hashicorp/vault-k8s\",\"tag\":\"1.5.0\"},\"port\":8080,\"replicas\":1,\"securityContext\":{\"container\":{},\"pod\":{}},\"serviceAccount\":{\"create\":true,\"createSecret\":true,\"name\":\"vault-sa\"}}}",
                "version": "0.29.1"
              }
            ],
            "name": "vault",
            "namespace": "vault",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.releases.hashicorp.com",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "global:\r\n  enabled: true\r\n  namespace: \"vault\"\r\n  externalVaultAddr: \"https://34.203.204.99:8202/\"\r\n\r\ninjector:\r\n  enabled: \"true\"\r\n  replicas: 1\r\n  port: 8080\r\n  authPath: \"auth/kubernetes\"\r\n  image:\r\n    repository: \"hashicorp/vault-k8s\"\r\n    tag: \"1.5.0\"\r\n    pullPolicy: IfNotPresent\r\n  agentImage:\r\n    repository: \"hashicorp/vault\"\r\n    tag: \"1.18.1\"\r\n\r\n  agentDefaults:\r\n    cpuLimit: \"500m\"\r\n    cpuRequest: \"250m\"\r\n    memLimit: \"128Mi\"\r\n    memRequest: \"64Mi\"\r\n\r\n  securityContext:\r\n    pod: {}\r\n    container: {}\r\n\r\n  serviceAccount:\r\n    create: true\r\n    name: \"vault-sa\"\r\n    createSecret: true\r\n\r\n  certs:\r\n    secretName: null\r\n    caBundle: \"\"\r\n    certName: tls.crt\r\n    keyName: tls.key\r\n"
            ],
            "verify": false,
            "version": "0.29.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "kubernetes_namespace.vault"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "vault",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "vault",
                "resource_version": "48912",
                "uid": "9874f0d0-4acc-470f-8fea-f15982846d2f"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret",
      "name": "vault_service_account_token",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIE7asLtP50UkwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNDEyMjAwNTIwNDNaFw0zNDEyMTgwNTI1NDNaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDMyLVegyCe05h3Ibx7adJ3OFjChYaQEzYN4ftFfQMDYmrxPTOoY+w/Hey2\nQHBw5XmQX13y/FNouz3c713U++VKWhzfhVhnI9I8BNTvyBtf6fTqmWFrIe5iyrZi\nveaYdcqpyB/+JpCFYeujiUVsMYmb32NORsu1bpjmq/uvFZUL+803cWV5ajG1mnPR\nuxUo4+0VT1O1CfYl0SgmWvS8OP2QN3lZX5CmcgLo1xJNXNIjqgL03RChnuUgJAcc\nH2C5H2hb2EuOU9PRUdNkV5igAcTR8g2iXZ5Si41BPgaDCiQ385OOA2pVs7qPiC4+\n+2WH/ZWWV+uzAlI9g0QT12PddH9TAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQc+7qRLn8IyK9sHg+1YQ+VwKD4cjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBppbs9FFfB\nkVXiStzEnP8Ny2wEmGk4nGzkB1tw4dmS5gtP+oZM3r1RHtNyKCPy1KoUDMibCEVA\n2owkSdDEqvFCcW3IVI3Z8PO0HcQXc1QY15wG8AuQZ8GMpHpkGNPULG+NsVB0AImA\nCOS6ptd7esrHP5d6rbCoxpvQz6MqIYlSPiT6f+3GfDcp5Osp7kZD6tOusDrRTDG1\ndxLc0Y5mrrzCuPJcHZwGHjyJrWVXCbDGyfd+a1rIURPnb0xxinOaojFAtXbM9WC4\nMDeynIAAEALvZoaBJiG38wGkwiMKhoBN6M31Kitj7IfrqNXuRGYe+Pn0xUko/BaA\nVoQ6r79Epjpk\n-----END CERTIFICATE-----\n",
              "namespace": "vault",
              "token": "eyJhbGciOiJSUzI1NiIsImtpZCI6InFCTG9Oam9DbUVObWF4NnlTeVg5VTFiVnV1b0ZfeDBUQjA4V2JxTDNCZG8ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ2YXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJ2YXVsdC1zYS10b2tlbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJ2YXVsdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImFjZWY0YzM3LWQ3ODAtNGU0ZS1iMmVjLWRlOTg4ZmIxYmVmYSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDp2YXVsdDp2YXVsdCJ9.EQuZkmaBBK-Bn6fKT2a9O6dQACSIPvsewlOSlT5NhqNHxPoXIq-fCMv6o9X-kEEmrtoVF83WJghcSjsfqBmljAEqMW-lsDmpvOy0Z3a1yq-jVS-hkSv8qybmUy9I5lx0nfXHSd-FsdwTGYiC-KHqoJz_nxdtzCnyetD9_83BGzNHQ4s5Bf-PjRWcYW6gvLmS73DDhQVXNaexPLi0nSLZDOVfVKFbFB8dbZ5BcgxsLLhNYQke1GUZy5TkhWXrlvEfd3xnkOK-FwS2tdx4Hn0x8AavQY6NGEepm5CNlSmFlmX-UC3iAFsj_8Vbcbe-Eaj5KSkpDT2uSZmRa-LenHzt2A"
            },
            "id": "vault/vault-sa-token",
            "immutable": false,
            "metadata": [
              {
                "annotations": {
                  "kubernetes.io/service-account.name": "vault"
                },
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "vault-sa-token",
                "namespace": "vault",
                "resource_version": "49994",
                "uid": "b017f29e-7b0d-4b48-9a99-2d94d9fe2429"
              }
            ],
            "timeouts": null,
            "type": "kubernetes.io/service-account-token",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.kubernetes_service_account.existing"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_auth_backend",
      "name": "kubernetes",
      "provider": "provider[\"registry.terraform.io/hashicorp/vault\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "accessor": "auth_kubernetes_d83be172",
            "description": "",
            "disable_remount": false,
            "id": "kubernetes",
            "identity_token_key": null,
            "local": false,
            "namespace": null,
            "path": "kubernetes",
            "tune": [],
            "type": "kubernetes"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_kubernetes_auth_backend_config",
      "name": "kubernetes_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/vault\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "kubernetes",
            "disable_iss_validation": false,
            "disable_local_ca_jwt": false,
            "id": "auth/kubernetes/config",
            "issuer": "",
            "kubernetes_ca_cert": "-----BEGIN CERTIFICATE-----\nMIIDBTCCAe2gAwIBAgIIE7asLtP50UkwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNDEyMjAwNTIwNDNaFw0zNDEyMTgwNTI1NDNaMBUx\nEzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK\nAoIBAQDMyLVegyCe05h3Ibx7adJ3OFjChYaQEzYN4ftFfQMDYmrxPTOoY+w/Hey2\nQHBw5XmQX13y/FNouz3c713U++VKWhzfhVhnI9I8BNTvyBtf6fTqmWFrIe5iyrZi\nveaYdcqpyB/+JpCFYeujiUVsMYmb32NORsu1bpjmq/uvFZUL+803cWV5ajG1mnPR\nuxUo4+0VT1O1CfYl0SgmWvS8OP2QN3lZX5CmcgLo1xJNXNIjqgL03RChnuUgJAcc\nH2C5H2hb2EuOU9PRUdNkV5igAcTR8g2iXZ5Si41BPgaDCiQ385OOA2pVs7qPiC4+\n+2WH/ZWWV+uzAlI9g0QT12PddH9TAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP\nBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQc+7qRLn8IyK9sHg+1YQ+VwKD4cjAV\nBgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBppbs9FFfB\nkVXiStzEnP8Ny2wEmGk4nGzkB1tw4dmS5gtP+oZM3r1RHtNyKCPy1KoUDMibCEVA\n2owkSdDEqvFCcW3IVI3Z8PO0HcQXc1QY15wG8AuQZ8GMpHpkGNPULG+NsVB0AImA\nCOS6ptd7esrHP5d6rbCoxpvQz6MqIYlSPiT6f+3GfDcp5Osp7kZD6tOusDrRTDG1\ndxLc0Y5mrrzCuPJcHZwGHjyJrWVXCbDGyfd+a1rIURPnb0xxinOaojFAtXbM9WC4\nMDeynIAAEALvZoaBJiG38wGkwiMKhoBN6M31Kitj7IfrqNXuRGYe+Pn0xUko/BaA\nVoQ6r79Epjpk\n-----END CERTIFICATE-----\n",
            "kubernetes_host": "https://EB5BE975ABA7F0EAD4B41F7CBD2B7DBE.gr7.us-east-1.eks.amazonaws.com",
            "namespace": null,
            "pem_keys": [],
            "token_reviewer_jwt": "",
            "use_annotations_as_alias_metadata": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token_reviewer_jwt"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.kubernetes_secret.sa_token",
            "vault_auth_backend.kubernetes"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_kubernetes_auth_backend_role",
      "name": "vault_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/vault\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "alias_name_source": "serviceaccount_uid",
            "audience": null,
            "backend": "kubernetes",
            "bound_service_account_names": [
              "vault"
            ],
            "bound_service_account_namespaces": [
              "vault"
            ],
            "id": "auth/kubernetes/role/vault-role",
            "namespace": null,
            "role_name": "vault-role",
            "token_bound_cidrs": [],
            "token_explicit_max_ttl": 0,
            "token_max_ttl": 3600,
            "token_no_default_policy": false,
            "token_num_uses": 0,
            "token_period": 0,
            "token_policies": [
              "default",
              "mysecret"
            ],
            "token_ttl": 0,
            "token_type": "default"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.kubernetes_secret.sa_token",
            "vault_auth_backend.kubernetes",
            "vault_kubernetes_auth_backend_config.kubernetes_config"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "vault_policy",
      "name": "mysecret",
      "provider": "provider[\"registry.terraform.io/hashicorp/vault\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "mysecret",
            "name": "mysecret",
            "namespace": null,
            "policy": "path \"techassurance/data/data/dev\" {\r\n  capabilities = [\"read\",\"list\"]\r\n}\r\n"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ],
  "check_results": null
}
